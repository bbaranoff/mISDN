diff --git b/drivers/isdn/mISDN/l1oip_core.c a/drivers/isdn/mISDN/l1oip_core.c
index 21d50e4..e365478 100644
--- b/drivers/isdn/mISDN/l1oip_core.c
+++ a/drivers/isdn/mISDN/l1oip_core.c
@@ -645,10 +645,8 @@ l1oip_socket_thread(void *data)
 {
 	struct l1oip *hc = (struct l1oip *)data;
 	int ret = 0;
+	struct msghdr msg;
 	struct sockaddr_in sin_rx;
-	struct kvec iov;
-	struct msghdr msg = {.msg_name = &sin_rx,
-			     .msg_namelen = sizeof(sin_rx)};
 	unsigned char *recvbuf;
 	size_t recvbuf_size = 1500;
 	int recvlen;
@@ -663,9 +661,6 @@ l1oip_socket_thread(void *data)
 		goto fail;
 	}
 
-	iov.iov_base = recvbuf;
-	iov.iov_len = recvbuf_size;
-
 	/* make daemon */
 	allow_signal(SIGTERM);
 
@@ -702,6 +697,12 @@ l1oip_socket_thread(void *data)
 		goto fail;
 	}
 
+	/* build receive message */
+	msg.msg_name = &sin_rx;
+	msg.msg_namelen = sizeof(sin_rx);
+	msg.msg_control = NULL;
+	msg.msg_controllen = 0;
+
 	/* build send message */
 	hc->sendmsg.msg_name = &hc->sin_remote;
 	hc->sendmsg.msg_namelen = sizeof(hc->sin_remote);
@@ -718,9 +719,12 @@ l1oip_socket_thread(void *data)
 		printk(KERN_DEBUG "%s: socket created and open\n",
 		       __func__);
 	while (!signal_pending(current)) {
-		iov_iter_kvec(&msg.msg_iter, READ | ITER_KVEC, &iov, 1,
-				recvbuf_size);
-		recvlen = sock_recvmsg(socket, &msg, 0);
+		struct kvec iov = {
+			.iov_base = recvbuf,
+			.iov_len = recvbuf_size,
+		};
+		recvlen = kernel_recvmsg(socket, &msg, &iov, 1,
+					 recvbuf_size, 0);
 		if (recvlen > 0) {
 			l1oip_socket_parse(hc, &sin_rx, recvbuf, recvlen);
 		} else {
